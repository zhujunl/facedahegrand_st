package com.miaxis.face.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.miaxis.face.bean.Advertisement;
import com.miaxis.face.bean.Config;
import com.miaxis.face.bean.IDCardRecord;
import com.miaxis.face.bean.LocalFeature;
import com.miaxis.face.bean.WhiteItem;

import com.miaxis.face.greendao.gen.AdvertisementDao;
import com.miaxis.face.greendao.gen.ConfigDao;
import com.miaxis.face.greendao.gen.IDCardRecordDao;
import com.miaxis.face.greendao.gen.LocalFeatureDao;
import com.miaxis.face.greendao.gen.WhiteItemDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig advertisementDaoConfig;
    private final DaoConfig configDaoConfig;
    private final DaoConfig iDCardRecordDaoConfig;
    private final DaoConfig localFeatureDaoConfig;
    private final DaoConfig whiteItemDaoConfig;

    private final AdvertisementDao advertisementDao;
    private final ConfigDao configDao;
    private final IDCardRecordDao iDCardRecordDao;
    private final LocalFeatureDao localFeatureDao;
    private final WhiteItemDao whiteItemDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        advertisementDaoConfig = daoConfigMap.get(AdvertisementDao.class).clone();
        advertisementDaoConfig.initIdentityScope(type);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        iDCardRecordDaoConfig = daoConfigMap.get(IDCardRecordDao.class).clone();
        iDCardRecordDaoConfig.initIdentityScope(type);

        localFeatureDaoConfig = daoConfigMap.get(LocalFeatureDao.class).clone();
        localFeatureDaoConfig.initIdentityScope(type);

        whiteItemDaoConfig = daoConfigMap.get(WhiteItemDao.class).clone();
        whiteItemDaoConfig.initIdentityScope(type);

        advertisementDao = new AdvertisementDao(advertisementDaoConfig, this);
        configDao = new ConfigDao(configDaoConfig, this);
        iDCardRecordDao = new IDCardRecordDao(iDCardRecordDaoConfig, this);
        localFeatureDao = new LocalFeatureDao(localFeatureDaoConfig, this);
        whiteItemDao = new WhiteItemDao(whiteItemDaoConfig, this);

        registerDao(Advertisement.class, advertisementDao);
        registerDao(Config.class, configDao);
        registerDao(IDCardRecord.class, iDCardRecordDao);
        registerDao(LocalFeature.class, localFeatureDao);
        registerDao(WhiteItem.class, whiteItemDao);
    }
    
    public void clear() {
        advertisementDaoConfig.clearIdentityScope();
        configDaoConfig.clearIdentityScope();
        iDCardRecordDaoConfig.clearIdentityScope();
        localFeatureDaoConfig.clearIdentityScope();
        whiteItemDaoConfig.clearIdentityScope();
    }

    public AdvertisementDao getAdvertisementDao() {
        return advertisementDao;
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public IDCardRecordDao getIDCardRecordDao() {
        return iDCardRecordDao;
    }

    public LocalFeatureDao getLocalFeatureDao() {
        return localFeatureDao;
    }

    public WhiteItemDao getWhiteItemDao() {
        return whiteItemDao;
    }

}
